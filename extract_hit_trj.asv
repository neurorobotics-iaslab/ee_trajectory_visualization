function [c_ee, run_hit, session_hit] = extract_hit_trj(event, ee, run, session, event_req, finish_file_code) 
    c_ee.tr.x = [];
    c_ee.tr.y = [];
    c_ee.tr.z = [];

    % extract only interested events
    TYP = check_hit(event.TYP, finish_file_code);
    POS = event.POS(ismember(TYP, event_req));
    DUR = event.DUR(ismember(TYP, event_req));

    run_hit.POS = [1];
    run_hit.DUR = zeros(size(run.DUR));

    session_hit.POS = [1];
    session_hit.DUR = zeros(size(session.DUR));
    
    i_run = 1; 
    i_session = 1;
    for i=1:numel(POS)
        c_pos = POS(i);
        c_dur = DUR(i);

        c_ee.tr.x = [c_ee.tr.x; ee.tr.x(c_pos:c_pos+c_dur-1)];
        c_ee.tr.y = [c_ee.tr.y; ee.tr.y(c_pos:c_pos+c_dur-1)];
        c_ee.tr.z = [c_ee.tr.z; ee.tr.z(c_pos:c_pos+c_dur-1)];

        % save run
        if (run.POS(i_run) + run.DUR(i_run)) > c_pos
            run_hit.DUR(i_run) = run_hit.DUR(i_run) + c_dur;
        else
            run_hit.DUR(i_run) = run_hit.DUR(i_run) + c_dur;
            run_hit.POS = [run_hit.POS; length(c_ee.tr.x)];
            i_run = i_run + 1;
        end

        % save session
        if (session.POS(i_session) + session.DUR(i_session)) > c_pos
            session_hit.DUR(i_session) = session_hit.DUR(i_session) + c_dur;
        else
            session_hit.DUR(i_session) = session_hit.DUR(i_session) + c_dur;
            session_hit.POS = [session_hit.POS; length(c_ee.tr.x)];
            i_session = i_session + 1;
        end
    end

end

% return a vector of typ with only hit 
function TYP = check_hit(TYP, finish_file_code)
    i = 1;
    while i <= length(TYP)
        if TYP(i) == 0
            if TYP(i+1) ~= finish_file_code
                if TYP(i+1) - 5000 ~= TYP(i+3)-1000
                    TYP(i:i+4) = zeros(size(TYP(i:i+4)));
                end
                % increment i to pass to the other trial
                i = i + 4;
            end
        end
        i = i + 1;
    end
end